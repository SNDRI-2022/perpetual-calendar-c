/********************************************************************************
 * @file algorithm_MyWeek.h
 * @author lxy (2305195328@qq.com)
 * @brief 星期算法,求星期几
 * @version 1.0.0
 * @date 2022-12-19
 ********************************************************************************/
//* 简单的方法
//* 把四个数加起来然后同余7就是所求的星期数。这四个数分别是：
//* C：2(3-(c mod4))（格里历）、(4-c)mod7（儒略历）或查世纪星期表
//* Y：(y mod28+[y mod28/4])mod7（闰年1、2月份Y-1）或查年份星期表
//! M：(3.4+(m-3)mod12×2.6)mod7或查月份星期表   --(1月为7，2月为3)--
//* D：d mod7、或查日期星期表
//* 就是说——W=(C+Y+M+D)mod7
//* 举例
//* 举例说明1：2008年12月10日
//* (6+3+5+3)mod7=3，即该日是星期三，其中c=20、y=8、m=12、d=10
//* 举例说明2：2008年2月10日
//* (6+2+3+3)mod7=0，即该日是星期日，其中c=20、y=8、m=2、d=10
//* 举例说明3：1842年8月29日
//* (2+3+2+1)mod7=1，即该日是星期一，其中c=18、y=42、m=8、d=29
//? 引用于维基百科
//? https://en.wikipedia.org/wiki/Determination_of_the_day_of_the_week

/********************************************************************************
 * @brief 算出并返回_year年1月1日是周几
 * 0表示周日,1表示周1
 * @param  _year            
 * @param  _is_yleap_year   
 * @return int              
 ********************************************************************************/
int func_MyWeek(int _year, bool _is_yleap_year)
{
    //* 求千位和百位并算出C1
    int C = _year / 1000 % 10 * 10 + _year / 100 % 10;
    int C1 = 2 * (3 - (C % 4));
    //* 求十位数和个位数并算出Y1
    int Y = _year / 10 % 10 * 10 + _year % 10;
    int Y1 = (Y % 28 + (Y % 28 / 4)) % 7;
    if (_is_yleap_year)
        Y1--;

    //* 算出M1
    // int M = 1;
    //! 1月为7，2月为3
    int M1 = 7;
    // double tmp1 = (3.4 + (M - 3)) * 2.6; //* 1和2月份为3-M而不是M-3
    // int M1 = ((int)tmp1 % 7) - 1;
    //* 算出D1
    int D = 1;
    int D1 = D%7;

    return (C1 + Y1 + M1 + D1) % 7;
}

    //!测试用
    // printf("C1:%d\n", C1);
    // printf("Y1:%d\n", Y1);
    // printf("M1:%d\n", M1);
    // printf("D1:%d\n", D1);
    // printf("%d\n",(C1+Y1+M1+D1)%7);